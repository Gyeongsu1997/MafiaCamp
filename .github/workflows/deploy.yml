name: Back-end Deployment

on:
  push:
    branches: [ "BE_develop" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 실행할 환경 설정
    steps:
      # 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # Node.js 환경 설정
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'  # NestJS에 맞는 Node.js 버전 설정

      # 의존성 설치
      - name: Install dependencies
        run: npm install --prefix BE

      # 코드 린트 검사
      - name: Run Linter
        run: npm run lint --prefix BE

      # 타입스크립트 컴파일 검사
      - name: TypeScript Compile Check
        run: npm run build:check --prefix BE

      # 테스트 실행 및 커버리지 확인
      #      - name: Run Tests and Check Coverage
      #        run: npm run test:cov --prefix BE

      # 애플리케이션 빌드
      - name: Build project
        run: npm run build --prefix BE

      # 빌드된 파일을 scp로 전송하기
      - name: Copy files via ssh password
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          proxy_host: ${{ secrets.PROXY_HOST }}
          proxy_username: ${{ secrets.PROXY_USERNAME }}
          proxy_password: ${{ secrets.PROXY_PASSWORD }}
          proxy_port: ${{ secrets.PROXY_PORT }}
          source: "./BE/dist"
          target: "~/mafiacamp/mafiacamp-be"
          overwrite: true

      # ssh 원격 접속을 통해 빌드 파일 실행하기
      - name: Executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          proxy_host: ${{ secrets.PROXY_HOST }}
          proxy_username: ${{ secrets.PROXY_USERNAME }}
          proxy_password: ${{ secrets.PROXY_PASSWORD }}
          proxy_port: ${{ secrets.PROXY_PORT }}
          script: |
            cd mafiacamp/mafiacamp-be/BE
            npm install
            pm2 reload BE || pm2 start --name BE npm -- run start